rm(list=ls())
rm(list=ls())
library(tidyverse)
library(readxl)
library(janitor)
# list files from source directory
dataDir <- 'data/ALSPAC_variable_catalogue/'
xlFiles <- list.files(dataDir)
# Remove the example file and swap files
xlFiles <- xlFiles[!startsWith(xlFiles, '~') & !startsWith(xlFiles, '_')]
# # Create sensible names from files.
# xlTableNames <- sapply(xlFiles, function(x) gsub(" variable names.xlsx", "", x))
# xlTableNames <- sapply(xlTableNames, function(x) gsub(" ", "_", x))
cleanDf <- function(tmp){
rowNum <- which(grepl("Filename", tmp[,1][[1]]))+1
tmp <- tmp[rowNum:dim(tmp)[1],1:3]
names(tmp) <- c("Filename", "Var name", "Var Label")
return(tmp)
}
allDfs  <- vector(mode = "list", length = length(xlFiles))
for(i in 1:length(xlFiles)){
fileName <-xlFiles[i]
# Get sheet names
sheetNames <- excel_sheets(paste0(dataDir, fileName))
# # Create clean sheet names (for labelling)
# sheetNamesClean <- sapply(sheetNames, function(x) gsub(" $", "", x))
# sheetNamesClean <- sapply(sheetNamesClean, function(x) gsub(" ", "_", x))
df <- read_excel(paste0(dataDir, fileName), sheet = sheetNames[1])
df <- cleanDf(df)
for (j in 2:length(sheetNames)){
tmp <- read_excel(paste0(dataDir, fileName), sheet = sheetNames[j])
tmp <- cleanDf(tmp)
df <- bind_rows(df, tmp)
}
allDfs[[i]] <- df
}
df <- bind_rows(allDfs)
allDfs <- NULL
# Clean the column names
df <- clean_names(df, case='snake')
write_rds(df, 'data/variable_catalogue.rds')
install.packages('tidyverse')
rm(list=ls())
library(tidyverse)
library(readxl)
library(janitor)
# list files from source directory
dataDir <- 'data/ALSPAC_variable_catalogue/'
xlFiles <- list.files(dataDir)
# Remove the example file and swap files
xlFiles <- xlFiles[!startsWith(xlFiles, '~') & !startsWith(xlFiles, '_')]
# # Create sensible names from files.
# xlTableNames <- sapply(xlFiles, function(x) gsub(" variable names.xlsx", "", x))
# xlTableNames <- sapply(xlTableNames, function(x) gsub(" ", "_", x))
cleanDf <- function(tmp){
rowNum <- which(grepl("Filename", tmp[,1][[1]]))+1
tmp <- tmp[rowNum:dim(tmp)[1],1:3]
names(tmp) <- c("Filename", "Var name", "Var Label")
return(tmp)
}
allDfs  <- vector(mode = "list", length = length(xlFiles))
for(i in 1:length(xlFiles)){
fileName <-xlFiles[i]
# Get sheet names
sheetNames <- excel_sheets(paste0(dataDir, fileName))
# # Create clean sheet names (for labelling)
# sheetNamesClean <- sapply(sheetNames, function(x) gsub(" $", "", x))
# sheetNamesClean <- sapply(sheetNamesClean, function(x) gsub(" ", "_", x))
df <- read_excel(paste0(dataDir, fileName), sheet = sheetNames[1])
df <- cleanDf(df)
for (j in 2:length(sheetNames)){
tmp <- read_excel(paste0(dataDir, fileName), sheet = sheetNames[j])
tmp <- cleanDf(tmp)
df <- bind_rows(df, tmp)
}
allDfs[[i]] <- df
}
df <- bind_rows(allDfs)
allDfs <- NULL
# Clean the column names
df <- clean_names(df, case='snake')
write_rds(df, 'data/variable_catalogue.rds')
install.packages('janitor')
rm(list=ls())
library(tidyverse)
library(readxl)
library(janitor)
# list files from source directory
dataDir <- 'data/ALSPAC_variable_catalogue/'
xlFiles <- list.files(dataDir)
# Remove the example file and swap files
xlFiles <- xlFiles[!startsWith(xlFiles, '~') & !startsWith(xlFiles, '_')]
# # Create sensible names from files.
# xlTableNames <- sapply(xlFiles, function(x) gsub(" variable names.xlsx", "", x))
# xlTableNames <- sapply(xlTableNames, function(x) gsub(" ", "_", x))
cleanDf <- function(tmp){
rowNum <- which(grepl("Filename", tmp[,1][[1]]))+1
tmp <- tmp[rowNum:dim(tmp)[1],1:3]
names(tmp) <- c("Filename", "Var name", "Var Label")
return(tmp)
}
allDfs  <- vector(mode = "list", length = length(xlFiles))
for(i in 1:length(xlFiles)){
fileName <-xlFiles[i]
# Get sheet names
sheetNames <- excel_sheets(paste0(dataDir, fileName))
# # Create clean sheet names (for labelling)
# sheetNamesClean <- sapply(sheetNames, function(x) gsub(" $", "", x))
# sheetNamesClean <- sapply(sheetNamesClean, function(x) gsub(" ", "_", x))
df <- read_excel(paste0(dataDir, fileName), sheet = sheetNames[1])
df <- cleanDf(df)
for (j in 2:length(sheetNames)){
tmp <- read_excel(paste0(dataDir, fileName), sheet = sheetNames[j])
tmp <- cleanDf(tmp)
df <- bind_rows(df, tmp)
}
allDfs[[i]] <- df
}
df <- bind_rows(allDfs)
allDfs <- NULL
# Clean the column names
df <- clean_names(df, case='snake')
write_rds(df, 'data/variable_catalogue.rds')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
debugSource('~/test.R')
debugSource('~/test.R')
debugSource('~/test.R')
debugSource('~/test.R')
debugSource('~/test.R')
debugSource('~/test.R')
debugSource('~/test.R')
debugSource('~/test.R')
debugSource('~/test.R')
quit
j
i
debugSource('~/test.R')
airquality
ls
x <-5
p <- function(input)
{}
p(q)
p <- function(input)
{print(input)}
p(q)
View(p)
p('q')
library(slidify)
pwd
getwd()
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/_slides/course_introduction/index.Rmd')
slidify::publish(host = "github", user="NatalieThurlby",repo="slides")
setwd(dir = 'jgi/workshops/reproducibility/robust-open-analysis-r/_slides/course_introduction/')
slidify::publish(host = "github", user="NatalieThurlby",repo="slides")
ls
slidify::publish(host = "github", user="NatalieThurlby",repo="slides")
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/_slides/course_introduction/index.Rmd')
slidify(inputFile = 'jgi/workshops/reproducibility/robust-open-analysis-r/_slides/course_introduction/index.Rmd')
